#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define SYMBOL 1 
#define NUMBER 2
#define SETTINGS 3
#define LOCK 4

#define COMBO_TIMEOUT 50

/ {
    combos {
        compatible = "zmk,combos";

        // Meta combos
        settings_combo {
            timeout-ms = <50>;
            key-positions = <16 17 18>;
            bindings = <&mo SETTINGS>;
        };

        lock_combo {
            timeout-ms = <50>;
            key-positions = <15 17 19>;
            bindings = <&tog LOCK>;
        };

        // Letter combos
        tab_combo {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <15 0>;
            bindings = <&kp TAB>;
        };

        single_quote_combo {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <15 1>;
            bindings = <&kp SINGLE_QUOTE>;
        };

        b_combo {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <15 2>;
            bindings = <&kp B>;
        };

        m_combo {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <15 3>;
            bindings = <&kp M>;
        };

        j_combo {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <15 4>;
            bindings = <&kp J>;
        };

        q_combo {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <15 5>;
            bindings = <&kp Q>;
        };

        Z_combo {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <15 6>;
            bindings = <&kp Z>;
        };

        l_combo {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <15 7>;
            bindings = <&kp L>;
        };

        c_combo {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <15 8>;
            bindings = <&kp C>;
        };

        v_combo {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <15 9>;
            bindings = <&kp V>;
        };

        windows_combo {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <15 10>;
            bindings = <&sk LGUI>;
        };

        app_combo {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <15 11>;
            bindings = <&kp K_APP>;
        };

        k_combo {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <15 12>;
            bindings = <&kp K>;
        };

        g_combo {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <15 13>;
            bindings = <&kp G>;
        };

        x_combo {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <15 14>;
            bindings = <&kp X>;
        };

        comma_combo {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <15 17>;
            bindings = <&kp COMMA>;
        };

        period_combo {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <15 18>;
            bindings = <&kp PERIOD>;
        };

        // Symbol combos
        
    };
 
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                          &kp F       &kp A &kp R       &kp W &kp P 
                          &kp O       &kp E &kp H       &kp T &kp D 
                          &kp U       &kp I &kp N       &kp S &kp Y 
                &kp SPACE &tog NUMBER       &tog SYMBOL &kp ENTER   &sk RSHIFT
            >;
        }; 

        symbol_layer {
            bindings = <
                          &kp QUESTION      &kp AMPERSAND   &kp ASTERISK         &kp COLON        &kp SEMICOLON
                          &kp SLASH         &kp EXCLAMATION &kp MINUS            &kp AT           &kp UNDERSCORE
                          &kp DOUBLE_QUOTES &kp LESS_THAN   &kp LEFT_PARENTHESIS &kp LEFT_BRACKET &kp LEFT_BRACE
                &kp SPACE &trans                            &trans                                &trans         &trans
            >;
        }; 

        number_layer {
            bindings = <
                            &kp TAB &kp A &kp B &kp M &kp J
                            &kp Q &kp Z &kp L &kp C &kp V 
                            &none &none &kp K &kp G &kp X
                &none       &trans                        &none       &none &sk RSHIFT
            >;
        }; 
        
        settings_layer {
            bindings = <
                            &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
                            &none        &none        &none        &none        &none 
                            &kp P        &none        &to LOCK    &none        &none 
                &bootloader &none                     &none                     &none        &bt BT_CLR
            >;
        };

        lock_layer {
            bindings = <
                      &none &none &none &none &none 
                      &none &none &none &none &none 
                      &none &none &none &none &none 
                &none &none       &none       &none       &none
            >;
        };

        symbol_secondary_layer {
            bindings = <
                            &none         &kp PLUS         &kp EQUAL             &kp DOLLAR        &kp HASH
                            &kp BACKSLASH &kp PERCENT      &kp PIPE              &kp TILDE         &kp CARET
                            &kp GRAVE     &kp GREATER_THAN &kp RIGHT_PARENTHESIS &kp RIGHT_BRACKET &kp RIGHT_BRACE
                &none       &none                        &none       &none &sk RSHIFT
            >;
        }; 
    };
};